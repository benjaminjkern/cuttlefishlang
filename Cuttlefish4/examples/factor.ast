[
  {
    ASTType: 'Assignment',
    assignments: [
      {
        ASTType: 'SingleAssignment',
        assignee: { ASTType: 'Ref', id: 'factor' },
        value: {
          ASTType: 'Function',
          patterns: [
            {
              ASTType: 'Pattern',
              input: [
                {
                  ASTType: 'PatternElem',
                  id: 'n',
                  type: { ASTType: 'Ref', id: 'Int' },
                  optional: false,
                  multiple: false,
                  default: []
                },
                {
                  ASTType: 'PatternElem',
                  id: 'm',
                  type: { ASTType: 'Ref', id: 'Int' },
                  optional: false,
                  multiple: false,
                  default: []
                }
              ],
              cases: [
                [
                  {
                    ASTType: 'Case',
                    test: [
                      {
                        ASTType: 'BinaryOp',
                        left: { ASTType: 'Ref', id: 'n' },
                        op: '==',
                        right: { ASTType: 'Num', value: 1 }
                      }
                    ],
                    output: [ { ASTType: 'Put', value: { ASTType: 'List' } } ]
                  },
                  {
                    ASTType: 'Case',
                    test: {
                      ASTType: 'BinaryOp',
                      left: {
                        ASTType: 'BinaryOp',
                        left: { ASTType: 'Ref', id: 'm' },
                        op: '*',
                        right: { ASTType: 'Ref', id: 'm' }
                      },
                      op: '<=',
                      right: { ASTType: 'Ref', id: 'n' }
                    },
                    cases: [
                      [
                        {
                          ASTType: 'Case',
                          test: [
                            {
                              ASTType: 'BinaryOp',
                              left: { ASTType: 'Ref', id: 'n' },
                              op: '%=',
                              right: { ASTType: 'Ref', id: 'm' }
                            }
                          ],
                          output: [
                            {
                              ASTType: 'Put',
                              value: {
                                ASTType: 'BinaryOp',
                                left: { ASTType: 'Ref', id: 'm' },
                                op: '++',
                                right: {
                                  ASTType: 'Application',
                                  func: {
                                    ASTType: 'Application',
                                    func: { ASTType: 'Ref', id: 'factor' },
                                    input: [
                                      {
                                        ASTType: 'BinaryOp',
                                        left: { ASTType: 'Ref', id: 'n' },
                                        op: '//',
                                        right: { ASTType: 'Ref', id: 'm' }
                                      }
                                    ]
                                  },
                                  input: [ { ASTType: 'Ref', id: 'm' } ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          ASTType: 'Case',
                          test: [],
                          output: [
                            {
                              ASTType: 'Put',
                              value: {
                                ASTType: 'Application',
                                func: {
                                  ASTType: 'Application',
                                  func: { ASTType: 'Ref', id: 'factor' },
                                  input: [ { ASTType: 'Ref', id: 'n' } ]
                                },
                                input: [
                                  {
                                    ASTType: 'BinaryOp',
                                    left: { ASTType: 'Ref', id: 'm' },
                                    op: '+',
                                    right: {
                                      ASTType: 'Ternary',
                                      test: {
                                        ASTType: 'BinaryOp',
                                        left: { ASTType: 'Ref', id: 'm' },
                                        op: '==',
                                        right: { ASTType: 'Num', value: 2 }
                                      },
                                      ifTrue: { ASTType: 'Num', value: 1 },
                                      ifFalse: { ASTType: 'Num', value: 2 }
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    ]
                  },
                  {
                    ASTType: 'Case',
                    test: [],
                    output: [
                      {
                        ASTType: 'Put',
                        value: {
                          ASTType: 'List',
                          values: [ { ASTType: 'Ref', id: 'n' } ]
                        }
                      }
                    ]
                  }
                ]
              ]
            }
          ]
        }
      }
    ]
  },
  {
    ASTType: 'Print',
    value: {
      ASTType: 'Application',
      func: { ASTType: 'Ref', id: 'factor' },
      input: [ { ASTType: 'Num', value: 120510923571235 } ]
    }
  }
]
