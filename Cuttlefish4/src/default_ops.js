const OpTypes = {
    "===": (left, right) => {},
    "==": (left, right) => {},
    ">=": (left, right) => {},
    "<=": (left, right) => {},
    ">": (left, right) => {},
    "<": (left, right) => {},
    "%": (left, right) => {},
    "^": (left, right) => {},
    "++": (left, right) => {},
    "**": (left, right) => {},
    "!=": (left, right) => {},
    "!==": (left, right) => {},
    "%=": (left, right) => {},
    "%!=": (left, right) => {},
    "|>": (left, right) => {},
    "*": (left, right) => {},
    "//": (left, right) => {},
    "/": (left, right) => {},
    "+": (left, right) => {
        return left.value + right.value;
    },
    "-": (left, right) => {},
    "|": (left, right) => {},
    "&": (left, right) => {},
    "||": (left, right) => {},
    "&&": (left, right) => {},
    "or": (left, right) => {},
    "and": (left, right) => {},
    "in": (left, right) => {},
}


const OpTypes = {
    "===": [{ returns: "Bool" }],
    "==": [{ returns: "Bool" }],
    ">=": [{ returns: "Bool", left: "Num", right: "Num" }],
    "<=": [{ returns: "Bool", left: "Num", right: "Num" }],
    ">": [{ returns: "Bool", left: "Num", right: "Num" }],
    "<": [{ returns: "Bool", left: "Num", right: "Num" }],
    "%": [{ returns: "Num", left: "Num", right: "Num" }],
    "^": [{ returns: "Num", left: "Num", right: "Num" }, { returns: { type: "Function", input: { id: "A" }, output: { id: "A" } }, left: { type: "Function", input: { id: "A" }, output: { id: "A" } }, right: "Int" }],
    "++": [{ returns: "String", left: "String", right: "String" }, {
            returns: "List",
            left: { type: "List", listType: { id: "A" } },
            right: { type: "List", listType: { id: "A" } },
        }, {
            returns: "List",
            left: { id: "A" },
            right: { type: "List", listType: { id: "A" } }
        },
        { returns: "List", left: { type: "List", listType: { id: "A" } }, right: { id: "A" } }
    ],
    "**": [{ returns: { type: "List", listType: { id: "A" } }, left: { id: "A" }, right: "Int" }, { returns: "Matrix", right: "Tuple" }],
    "!=": [{ returns: "Bool" }],
    "!==": [{ returns: "Bool" }],
    "%=": [{ returns: "Bool", left: "Num", right: "Num" }],
    "%!=": [{ returns: "Bool", left: "Num", right: "Num" }],
    "|>": [{ returns: { id: "B" }, left: { id: "A" }, right: { type: "Function", input: { id: "A" }, output: { id: "B" } } }],
    "*": [{ returns: "Num", left: "Num", right: "Num" }, { returns: { type: "Function", input: { id: "A" }, output: { id: "C" } }, left: { type: "Function", input: { id: "A" }, output: { id: "B" } }, right: { type: "Function", input: { id: "B" }, output: { id: "C" } } }],
    "//": [{ returns: "Int", left: "Num", right: "Int" }],
    "/": [{ returns: "Num", left: "Num", right: "Num" }],
    "+": [{ returns: "Num", left: "Num", right: "Num" }],
    "-": [{ returns: "Set", left: "Set", right: "Set" }, { returns: "Num", left: "Num", right: "Num" }],
    "|": [{ returns: "Set", left: "Set", right: "Set" }],
    "&": [{ returns: "Set", left: "Set", right: "Set" }],
    "||": [{ returns: "Bool", left: "Bool", right: "Bool" }],
    "&&": [{ returns: "Bool", left: "Bool", right: "Bool" }],
    "or": [{ returns: "Bool", left: "Bool", right: "Bool" }],
    "and": [{ returns: "Bool", left: "Bool", right: "Bool" }],
    "in": [{ returns: "Bool", left: "Object", right: "Collection" }],
    "contains": [{ returns: "Bool", left: "Collection", right: "Object" }],
}