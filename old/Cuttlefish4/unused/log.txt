parseType(N, [n,-,-,n,n,-,n,-,-,n,-,n,n,-,n]) {
   matchToType(N, [n,-,-,n,n,-,n,-,-,n,-,n,n,-,n]) {
   } -> true
   parseExpression([{type:N},-,{type:N}], [n,-,-,n,n,-,n,-,-,n,-,n,n,-,n]) {
      allMatches([{type:N},-,{type:N}], [n,-,-,n,n,-,n,-,-,n,-,n,n,-,n]) {
         matchToType(N, []) {
         } -> false
         matchToType(N, [n]) {
         } -> true
         allMatches([-,{type:N}], [-,-,n,n,-,n,-,-,n,-,n,n,-,n]) {
            allMatches([{type:N}], [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [-]) {
               } -> false
               matchToType(N, [-,n]) {
               } -> true
               allMatches([], [n,-,n,-,-,n,-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,n]) {
               } -> true
               allMatches([], [-,n,-,-,n,-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n]) {
               } -> true
               allMatches([], [-,-,n,-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,n,-,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-,n]) {
               } -> true
               allMatches([], [-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,n,-,n,-,-,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-,n,-,n]) {
               } -> true
               allMatches([], [n,-,n]) {
               } -> []
               matchToType(N, [-,n,n,-,n,-,-,n,-,n,n]) {
               } -> true
               allMatches([], [-,n]) {
               } -> []
               matchToType(N, [-,n,n,-,n,-,-,n,-,n,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[13]]
         } -> [[1,14]]
         matchToType(N, [n,-]) {
         } -> false
         matchToType(N, [n,-,-]) {
         } -> false
         matchToType(N, [n,-,-,n]) {
         } -> true
         allMatches([-,{type:N}], [n,-,n,-,-,n,-,n,n,-,n]) {
            allMatches([{type:N}], [-,n,-,-,n,-,n,n,-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [-]) {
               } -> false
               matchToType(N, [-,n]) {
               } -> true
               allMatches([], [-,-,n,-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,-]) {
               } -> false
               matchToType(N, [-,n,-,-]) {
               } -> false
               matchToType(N, [-,n,-,-,n]) {
               } -> true
               allMatches([], [-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,-,-,n,-]) {
               } -> false
               matchToType(N, [-,n,-,-,n,-,n]) {
               } -> true
               allMatches([], [n,-,n]) {
               } -> []
               matchToType(N, [-,n,-,-,n,-,n,n]) {
               } -> true
               allMatches([], [-,n]) {
               } -> []
               matchToType(N, [-,n,-,-,n,-,n,n,-]) {
               } -> false
               matchToType(N, [-,n,-,-,n,-,n,n,-,n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[10]]
         } -> [[1,11]]
         matchToType(N, [n,-,-,n,n]) {
         } -> true
         allMatches([-,{type:N}], [-,n,-,-,n,-,n,n,-,n]) {
            allMatches([{type:N}], [n,-,-,n,-,n,n,-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [n]) {
               } -> true
               allMatches([], [-,-,n,-,n,n,-,n]) {
               } -> []
               matchToType(N, [n,-]) {
               } -> false
               matchToType(N, [n,-,-]) {
               } -> false
               matchToType(N, [n,-,-,n]) {
               } -> true
               allMatches([], [-,n,n,-,n]) {
               } -> []
               matchToType(N, [n,-,-,n,-]) {
               } -> false
               matchToType(N, [n,-,-,n,-,n]) {
               } -> true
               allMatches([], [n,-,n]) {
               } -> []
               matchToType(N, [n,-,-,n,-,n,n]) {
               } -> true
               allMatches([], [-,n]) {
               } -> []
               matchToType(N, [n,-,-,n,-,n,n,-]) {
               } -> false
               matchToType(N, [n,-,-,n,-,n,n,-,n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[9]]
         } -> [[1,10]]
         matchToType(N, [n,-,-,n,n,-]) {
         } -> false
         matchToType(N, [n,-,-,n,n,-,n]) {
         } -> true
         allMatches([-,{type:N}], [-,-,n,-,n,n,-,n]) {
            allMatches([{type:N}], [-,n,-,n,n,-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [-]) {
               } -> false
               matchToType(N, [-,n]) {
               } -> true
               allMatches([], [-,n,n,-,n]) {
               } -> []
               matchToType(N, [-,n,-]) {
               } -> false
               matchToType(N, [-,n,-,n]) {
               } -> true
               allMatches([], [n,-,n]) {
               } -> []
               matchToType(N, [-,n,-,n,n]) {
               } -> true
               allMatches([], [-,n]) {
               } -> []
               matchToType(N, [-,n,-,n,n,-]) {
               } -> false
               matchToType(N, [-,n,-,n,n,-,n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[7]]
         } -> [[1,8]]
         matchToType(N, [n,-,-,n,n,-,n,-]) {
         } -> false
         matchToType(N, [n,-,-,n,n,-,n,-,-]) {
         } -> false
         matchToType(N, [n,-,-,n,n,-,n,-,-,n]) {
         } -> true
         allMatches([-,{type:N}], [-,n,n,-,n]) {
            allMatches([{type:N}], [n,n,-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [n]) {
               } -> true
               allMatches([], [n,-,n]) {
               } -> []
               matchToType(N, [n,n]) {
               } -> true
               allMatches([], [-,n]) {
               } -> []
               matchToType(N, [n,n,-]) {
               } -> false
               matchToType(N, [n,n,-,n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[4]]
         } -> [[1,5]]
         matchToType(N, [n,-,-,n,n,-,n,-,-,n,-]) {
         } -> false
         matchToType(N, [n,-,-,n,n,-,n,-,-,n,-,n]) {
         } -> true
         allMatches([-,{type:N}], [n,-,n]) {
            allMatches([{type:N}], [-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [-]) {
               } -> false
               matchToType(N, [-,n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[2]]
         } -> [[1,3]]
         matchToType(N, [n,-,-,n,n,-,n,-,-,n,-,n,n]) {
         } -> true
         allMatches([-,{type:N}], [-,n]) {
            allMatches([{type:N}], [n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [n]) {
               } -> true
               allMatches([], []) {
               } -> [[]]
            } -> [[1]]
         } -> [[1,2]]
         matchToType(N, [n,-,-,n,n,-,n,-,-,n,-,n,n,-]) {
         } -> false
         matchToType(N, [n,-,-,n,n,-,n,-,-,n,-,n,n,-,n]) {
         } -> true
         allMatches([-,{type:N}], []) {
         } -> []
      } -> [[1,2,15],[4,5,15],[5,6,15],[7,8,15],[10,11,15],[12,13,15],[13,14,15]]
      parseType(N, [n]) {
         matchToType(N, [n]) {
         } -> true
         parseExpression([{type:N},-,{type:N}], [n]) {
            allMatches([{type:N},-,{type:N}], [n]) {
            } -> []
         } -> false
         parseExpression([{type:N},{type:N}], [n]) {
            allMatches([{type:N},{type:N}], [n]) {
            } -> []
         } -> false
         parseExpression([-,{type:N}], [n]) {
            allMatches([-,{type:N}], [n]) {
            } -> []
         } -> false
         parseExpression([n], [n]) {
            allMatches([n], [n]) {
               allMatches([], []) {
               } -> [[]]
            } -> [[1]]
         } -> true
      } -> true
      parseType(N, [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
         matchToType(N, [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
         } -> true
         parseExpression([{type:N},-,{type:N}], [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
            allMatches([{type:N},-,{type:N}], [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
               matchToType(N, []) {
               } -> false
               matchToType(N, [-]) {
               } -> false
               matchToType(N, [-,n]) {
               } -> true
               allMatches([-,{type:N}], [n,-,n,-,-,n,-,n,n,-,n]) {
                  allMatches([{type:N}], [-,n,-,-,n,-,n,n,-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [-]) {
                     } -> false
                     matchToType(N, [-,n]) {
                     } -> true
                     allMatches([], [-,-,n,-,n,n,-,n]) {
                     } -> []
                     matchToType(N, [-,n,-]) {
                     } -> false
                     matchToType(N, [-,n,-,-]) {
                     } -> false
                     matchToType(N, [-,n,-,-,n]) {
                     } -> true
                     allMatches([], [-,n,n,-,n]) {
                     } -> []
                     matchToType(N, [-,n,-,-,n,-]) {
                     } -> false
                     matchToType(N, [-,n,-,-,n,-,n]) {
                     } -> true
                     allMatches([], [n,-,n]) {
                     } -> []
                     matchToType(N, [-,n,-,-,n,-,n,n]) {
                     } -> true
                     allMatches([], [-,n]) {
                     } -> []
                     matchToType(N, [-,n,-,-,n,-,n,n,-]) {
                     } -> false
                     matchToType(N, [-,n,-,-,n,-,n,n,-,n]) {
                     } -> true
                     allMatches([], []) {
                     } -> [[]]
                  } -> [[10]]
               } -> [[1,11]]
               matchToType(N, [-,n,n]) {
               } -> true
               allMatches([-,{type:N}], [-,n,-,-,n,-,n,n,-,n]) {
                  allMatches([{type:N}], [n,-,-,n,-,n,n,-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [n]) {
                     } -> true
                     allMatches([], [-,-,n,-,n,n,-,n]) {
                     } -> []
                     matchToType(N, [n,-]) {
                     } -> false
                     matchToType(N, [n,-,-]) {
                     } -> false
                     matchToType(N, [n,-,-,n]) {
                     } -> true
                     allMatches([], [-,n,n,-,n]) {
                     } -> []
                     matchToType(N, [n,-,-,n,-]) {
                     } -> false
                     matchToType(N, [n,-,-,n,-,n]) {
                     } -> true
                     allMatches([], [n,-,n]) {
                     } -> []
                     matchToType(N, [n,-,-,n,-,n,n]) {
                     } -> true
                     allMatches([], [-,n]) {
                     } -> []
                     matchToType(N, [n,-,-,n,-,n,n,-]) {
                     } -> false
                     matchToType(N, [n,-,-,n,-,n,n,-,n]) {
                     } -> true
                     allMatches([], []) {
                     } -> [[]]
                  } -> [[9]]
               } -> [[1,10]]
               matchToType(N, [-,n,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n]) {
               } -> true
               allMatches([-,{type:N}], [-,-,n,-,n,n,-,n]) {
                  allMatches([{type:N}], [-,n,-,n,n,-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [-]) {
                     } -> false
                     matchToType(N, [-,n]) {
                     } -> true
                     allMatches([], [-,n,n,-,n]) {
                     } -> []
                     matchToType(N, [-,n,-]) {
                     } -> false
                     matchToType(N, [-,n,-,n]) {
                     } -> true
                     allMatches([], [n,-,n]) {
                     } -> []
                     matchToType(N, [-,n,-,n,n]) {
                     } -> true
                     allMatches([], [-,n]) {
                     } -> []
                     matchToType(N, [-,n,-,n,n,-]) {
                     } -> false
                     matchToType(N, [-,n,-,n,n,-,n]) {
                     } -> true
                     allMatches([], []) {
                     } -> [[]]
                  } -> [[7]]
               } -> [[1,8]]
               matchToType(N, [-,n,n,-,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-,n]) {
               } -> true
               allMatches([-,{type:N}], [-,n,n,-,n]) {
                  allMatches([{type:N}], [n,n,-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [n]) {
                     } -> true
                     allMatches([], [n,-,n]) {
                     } -> []
                     matchToType(N, [n,n]) {
                     } -> true
                     allMatches([], [-,n]) {
                     } -> []
                     matchToType(N, [n,n,-]) {
                     } -> false
                     matchToType(N, [n,n,-,n]) {
                     } -> true
                     allMatches([], []) {
                     } -> [[]]
                  } -> [[4]]
               } -> [[1,5]]
               matchToType(N, [-,n,n,-,n,-,-,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-,n,-,n]) {
               } -> true
               allMatches([-,{type:N}], [n,-,n]) {
                  allMatches([{type:N}], [-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [-]) {
                     } -> false
                     matchToType(N, [-,n]) {
                     } -> true
                     allMatches([], []) {
                     } -> [[]]
                  } -> [[2]]
               } -> [[1,3]]
               matchToType(N, [-,n,n,-,n,-,-,n,-,n,n]) {
               } -> true
               allMatches([-,{type:N}], [-,n]) {
                  allMatches([{type:N}], [n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [n]) {
                     } -> true
                     allMatches([], []) {
                     } -> [[]]
                  } -> [[1]]
               } -> [[1,2]]
               matchToType(N, [-,n,n,-,n,-,-,n,-,n,n,-]) {
               } -> false
               matchToType(N, [-,n,n,-,n,-,-,n,-,n,n,-,n]) {
               } -> true
               allMatches([-,{type:N}], []) {
               } -> []
            } -> [[2,3,13],[3,4,13],[5,6,13],[8,9,13],[10,11,13],[11,12,13]]
            parseType(N, [-,n]) {
               matchToType(N, [-,n]) {
               } -> true
               parseExpression([{type:N},-,{type:N}], [-,n]) {
                  allMatches([{type:N},-,{type:N}], [-,n]) {
                  } -> []
               } -> false
               parseExpression([{type:N},{type:N}], [-,n]) {
                  allMatches([{type:N},{type:N}], [-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [-]) {
                     } -> false
                     matchToType(N, [-,n]) {
                     } -> true
                     allMatches([{type:N}], []) {
                     } -> []
                  } -> []
               } -> false
               parseExpression([-,{type:N}], [-,n]) {
                  allMatches([-,{type:N}], [-,n]) {
                     allMatches([{type:N}], [n]) {
                        matchToType(N, []) {
                        } -> false
                        matchToType(N, [n]) {
                        } -> true
                        allMatches([], []) {
                        } -> [[]]
                     } -> [[1]]
                  } -> [[1,2]]
                  parseType(N, [n]) {
                     matchToType(N, [n]) {
                     } -> true
                     parseExpression([{type:N},-,{type:N}], [n]) {
                        allMatches([{type:N},-,{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([{type:N},{type:N}], [n]) {
                        allMatches([{type:N},{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([-,{type:N}], [n]) {
                        allMatches([-,{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([n], [n]) {
                        allMatches([n], [n]) {
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[1]]
                     } -> true
                  } -> true
               } -> true
            } -> true
            parseType(N, [-,n,n]) {
               matchToType(N, [-,n,n]) {
               } -> true
               parseExpression([{type:N},-,{type:N}], [-,n,n]) {
                  allMatches([{type:N},-,{type:N}], [-,n,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [-]) {
                     } -> false
                     matchToType(N, [-,n]) {
                     } -> true
                     allMatches([-,{type:N}], [n]) {
                     } -> []
                     matchToType(N, [-,n,n]) {
                     } -> true
                     allMatches([-,{type:N}], []) {
                     } -> []
                  } -> []
               } -> false
               parseExpression([{type:N},{type:N}], [-,n,n]) {
                  allMatches([{type:N},{type:N}], [-,n,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [-]) {
                     } -> false
                     matchToType(N, [-,n]) {
                     } -> true
                     allMatches([{type:N}], [n]) {
                        matchToType(N, []) {
                        } -> false
                        matchToType(N, [n]) {
                        } -> true
                        allMatches([], []) {
                        } -> [[]]
                     } -> [[1]]
                     matchToType(N, [-,n,n]) {
                     } -> true
                     allMatches([{type:N}], []) {
                     } -> []
                  } -> [[2,3]]
                  parseType(N, [-,n]) {
                     matchToType(N, [-,n]) {
                     } -> true
                     parseExpression([{type:N},-,{type:N}], [-,n]) {
                        allMatches([{type:N},-,{type:N}], [-,n]) {
                        } -> []
                     } -> false
                     parseExpression([{type:N},{type:N}], [-,n]) {
                        allMatches([{type:N},{type:N}], [-,n]) {
                           matchToType(N, []) {
                           } -> false
                           matchToType(N, [-]) {
                           } -> false
                           matchToType(N, [-,n]) {
                           } -> true
                           allMatches([{type:N}], []) {
                           } -> []
                        } -> []
                     } -> false
                     parseExpression([-,{type:N}], [-,n]) {
                        allMatches([-,{type:N}], [-,n]) {
                           allMatches([{type:N}], [n]) {
                              matchToType(N, []) {
                              } -> false
                              matchToType(N, [n]) {
                              } -> true
                              allMatches([], []) {
                              } -> [[]]
                           } -> [[1]]
                        } -> [[1,2]]
                        parseType(N, [n]) {
                           matchToType(N, [n]) {
                           } -> true
                           parseExpression([{type:N},-,{type:N}], [n]) {
                              allMatches([{type:N},-,{type:N}], [n]) {
                              } -> []
                           } -> false
                           parseExpression([{type:N},{type:N}], [n]) {
                              allMatches([{type:N},{type:N}], [n]) {
                              } -> []
                           } -> false
                           parseExpression([-,{type:N}], [n]) {
                              allMatches([-,{type:N}], [n]) {
                              } -> []
                           } -> false
                           parseExpression([n], [n]) {
                              allMatches([n], [n]) {
                                 allMatches([], []) {
                                 } -> [[]]
                              } -> [[1]]
                           } -> true
                        } -> true
                     } -> true
                  } -> true
                  parseType(N, [n]) {
                     matchToType(N, [n]) {
                     } -> true
                     parseExpression([{type:N},-,{type:N}], [n]) {
                        allMatches([{type:N},-,{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([{type:N},{type:N}], [n]) {
                        allMatches([{type:N},{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([-,{type:N}], [n]) {
                        allMatches([-,{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([n], [n]) {
                        allMatches([n], [n]) {
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[1]]
                     } -> true
                  } -> true
               } -> true
            } -> true
            parseType(N, [n,-,-,n,-,n,n,-,n]) {
               matchToType(N, [n,-,-,n,-,n,n,-,n]) {
               } -> true
               parseExpression([{type:N},-,{type:N}], [n,-,-,n,-,n,n,-,n]) {
                  allMatches([{type:N},-,{type:N}], [n,-,-,n,-,n,n,-,n]) {
                     matchToType(N, []) {
                     } -> false
                     matchToType(N, [n]) {
                     } -> true
                     allMatches([-,{type:N}], [-,-,n,-,n,n,-,n]) {
                        allMatches([{type:N}], [-,n,-,n,n,-,n]) {
                           matchToType(N, []) {
                           } -> false
                           matchToType(N, [-]) {
                           } -> false
                           matchToType(N, [-,n]) {
                           } -> true
                           allMatches([], [-,n,n,-,n]) {
                           } -> []
                           matchToType(N, [-,n,-]) {
                           } -> false
                           matchToType(N, [-,n,-,n]) {
                           } -> true
                           allMatches([], [n,-,n]) {
                           } -> []
                           matchToType(N, [-,n,-,n,n]) {
                           } -> true
                           allMatches([], [-,n]) {
                           } -> []
                           matchToType(N, [-,n,-,n,n,-]) {
                           } -> false
                           matchToType(N, [-,n,-,n,n,-,n]) {
                           } -> true
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[7]]
                     } -> [[1,8]]
                     matchToType(N, [n,-]) {
                     } -> false
                     matchToType(N, [n,-,-]) {
                     } -> false
                     matchToType(N, [n,-,-,n]) {
                     } -> true
                     allMatches([-,{type:N}], [-,n,n,-,n]) {
                        allMatches([{type:N}], [n,n,-,n]) {
                           matchToType(N, []) {
                           } -> false
                           matchToType(N, [n]) {
                           } -> true
                           allMatches([], [n,-,n]) {
                           } -> []
                           matchToType(N, [n,n]) {
                           } -> true
                           allMatches([], [-,n]) {
                           } -> []
                           matchToType(N, [n,n,-]) {
                           } -> false
                           matchToType(N, [n,n,-,n]) {
                           } -> true
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[4]]
                     } -> [[1,5]]
                     matchToType(N, [n,-,-,n,-]) {
                     } -> false
                     matchToType(N, [n,-,-,n,-,n]) {
                     } -> true
                     allMatches([-,{type:N}], [n,-,n]) {
                        allMatches([{type:N}], [-,n]) {
                           matchToType(N, []) {
                           } -> false
                           matchToType(N, [-]) {
                           } -> false
                           matchToType(N, [-,n]) {
                           } -> true
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[2]]
                     } -> [[1,3]]
                     matchToType(N, [n,-,-,n,-,n,n]) {
                     } -> true
                     allMatches([-,{type:N}], [-,n]) {
                        allMatches([{type:N}], [n]) {
                           matchToType(N, []) {
                           } -> false
                           matchToType(N, [n]) {
                           } -> true
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[1]]
                     } -> [[1,2]]
                     matchToType(N, [n,-,-,n,-,n,n,-]) {
                     } -> false
                     matchToType(N, [n,-,-,n,-,n,n,-,n]) {
                     } -> true
                     allMatches([-,{type:N}], []) {
                     } -> []
                  } -> [[1,2,9],[4,5,9],[6,7,9],[7,8,9]]
                  parseType(N, [n]) {
                     matchToType(N, [n]) {
                     } -> true
                     parseExpression([{type:N},-,{type:N}], [n]) {
                        allMatches([{type:N},-,{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([{type:N},{type:N}], [n]) {
                        allMatches([{type:N},{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([-,{type:N}], [n]) {
                        allMatches([-,{type:N}], [n]) {
                        } -> []
                     } -> false
                     parseExpression([n], [n]) {
                        allMatches([n], [n]) {
                           allMatches([], []) {
                           } -> [[]]
                        } -> [[1]]
                     } -> true
                  } -> true
                  parseType(N, [-,n,-,n,n,-,n]) {
                     matchToType(N, [-,n,-,n,n,-,n]) {
                     } -> true
                     parseExpression([{type:N},-,{type:N}], [-,n,-,n,n,-,n]) {
                        allMatches([{type:N},-,{type:N}], [-,n,-,n,n,-,n]) {
                           matchToType(N, []) {
                           } -> false
                           matchToType(N, [-]) {
                           } -> false
                           matchToType(N, [-,n]) {
                           } -> true
                           allMatches([-,{type:N}], [-,n,n,-,n]) {
                              allMatches([{type:N}], [n,n,-,n]) {
                                 matchToType(N, []) {
                                 } -> false
                                 matchToType(N, [n]) {
                                 } -> true
                                 allMatches([], [n,-,n]) {
                                 } -> []
                                 matchToType(N, [n,n]) {
                                 } -> true
                                 allMatches([], [-,n]) {
                                 } -> []
                                 matchToType(N, [n,n,-]) {
                                 } -> false
                                 matchToType(N, [n,n,-,n]) {
                                 } -> true
                                 allMatches([], []) {
                                 } -> [[]]
                              } -> [[4]]
                           } -> [[1,5]]
                           matchToType(N, [-,n,-]) {
                           } -> false
                           matchToType(N, [-,n,-,n]) {
                           } -> true
                           allMatches([-,{type:N}], [n,-,n]) {
                              allMatches([{type:N}], [-,n]) {
                                 matchToType(N, []) {
                                 } -> false
                                 matchToType(N, [-]) {
                                 } -> false
                                 matchToType(N, [-,n]) {
                                 } -> true
                                 allMatches([], []) {
                                 } -> [[]]
                              } -> [[2]]
                           } -> [[1,3]]
                           matchToType(N, [-,n,-,n,n]) {
                           } -> true
                           allMatches([-,{type:N}], [-,n]) {
                              allMatches([{type:N}], [n]) {
                                 matchToType(N, []) {
                                 } -> false
                                 matchToType(N, [n]) {
                                 } -> true
                                 allMatches([], []) {
                                 } -> [[]]
                              } -> [[1]]
                           } -> [[1,2]]
                           matchToType(N, [-,n,-,n,n,-]) {
                           } -> false
                           matchToType(N, [-,n,-,n,n,-,n]) {
                           } -> true
                           allMatches([-,{type:N}], []) {
                           } -> []
                        } -> [[2,3,7],[4,5,7],[5,6,7]]
                        parseType(N, [-,n]) {
                           matchToType(N, [-,n]) {
                           } -> true
                           parseExpression([{type:N},-,{type:N}], [-,n]) {
                              allMatches([{type:N},-,{type:N}], [-,n]) {
                              } -> []
                           } -> false
                           parseExpression([{type:N},{type:N}], [-,n]) {
                              allMatches([{type:N},{type:N}], [-,n]) {
                                 matchToType(N, []) {
                                 } -> false
                                 matchToType(N, [-]) {
                                 } -> false
                                 matchToType(N, [-,n]) {
                                 } -> true
                                 allMatches([{type:N}], []) {
                                 } -> []
                              } -> []
                           } -> false
                           parseExpression([-,{type:N}], [-,n]) {
                              allMatches([-,{type:N}], [-,n]) {
                                 allMatches([{type:N}], [n]) {
                                    matchToType(N, []) {
                                    } -> false
                                    matchToType(N, [n]) {
                                    } -> true
                                    allMatches([], []) {
                                    } -> [[]]
                                 } -> [[1]]
                              } -> [[1,2]]
                              parseType(N, [n]) {
                                 matchToType(N, [n]) {
                                 } -> true
                                 parseExpression([{type:N},-,{type:N}], [n]) {
                                    allMatches([{type:N},-,{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([{type:N},{type:N}], [n]) {
                                    allMatches([{type:N},{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([-,{type:N}], [n]) {
                                    allMatches([-,{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([n], [n]) {
                                    allMatches([n], [n]) {
                                       allMatches([], []) {
                                       } -> [[]]
                                    } -> [[1]]
                                 } -> true
                              } -> true
                           } -> true
                        } -> true
                        parseType(N, [n,n,-,n]) {
                           matchToType(N, [n,n,-,n]) {
                           } -> true
                           parseExpression([{type:N},-,{type:N}], [n,n,-,n]) {
                              allMatches([{type:N},-,{type:N}], [n,n,-,n]) {
                                 matchToType(N, []) {
                                 } -> false
                                 matchToType(N, [n]) {
                                 } -> true
                                 allMatches([-,{type:N}], [n,-,n]) {
                                    allMatches([{type:N}], [-,n]) {
                                       matchToType(N, []) {
                                       } -> false
                                       matchToType(N, [-]) {
                                       } -> false
                                       matchToType(N, [-,n]) {
                                       } -> true
                                       allMatches([], []) {
                                       } -> [[]]
                                    } -> [[2]]
                                 } -> [[1,3]]
                                 matchToType(N, [n,n]) {
                                 } -> true
                                 allMatches([-,{type:N}], [-,n]) {
                                    allMatches([{type:N}], [n]) {
                                       matchToType(N, []) {
                                       } -> false
                                       matchToType(N, [n]) {
                                       } -> true
                                       allMatches([], []) {
                                       } -> [[]]
                                    } -> [[1]]
                                 } -> [[1,2]]
                                 matchToType(N, [n,n,-]) {
                                 } -> false
                                 matchToType(N, [n,n,-,n]) {
                                 } -> true
                                 allMatches([-,{type:N}], []) {
                                 } -> []
                              } -> [[1,2,4],[2,3,4]]
                              parseType(N, [n]) {
                                 matchToType(N, [n]) {
                                 } -> true
                                 parseExpression([{type:N},-,{type:N}], [n]) {
                                    allMatches([{type:N},-,{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([{type:N},{type:N}], [n]) {
                                    allMatches([{type:N},{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([-,{type:N}], [n]) {
                                    allMatches([-,{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([n], [n]) {
                                    allMatches([n], [n]) {
                                       allMatches([], []) {
                                       } -> [[]]
                                    } -> [[1]]
                                 } -> true
                              } -> true
                              parseType(N, [n,n]) {
                                 matchToType(N, [n,n]) {
                                 } -> true
                                 parseExpression([{type:N},-,{type:N}], [n,n]) {
                                    allMatches([{type:N},-,{type:N}], [n,n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([{type:N},{type:N}], [n,n]) {
                                    allMatches([{type:N},{type:N}], [n,n]) {
                                       matchToType(N, []) {
                                       } -> false
                                       matchToType(N, [n]) {
                                       } -> true
                                       allMatches([{type:N}], [n]) {
                                          matchToType(N, []) {
                                          } -> false
                                          matchToType(N, [n]) {
                                          } -> true
                                          allMatches([], []) {
                                          } -> [[]]
                                       } -> [[1]]
                                       matchToType(N, [n,n]) {
                                       } -> true
                                       allMatches([{type:N}], []) {
                                       } -> []
                                    } -> [[1,2]]
                                    parseType(N, [n]) {
                                       matchToType(N, [n]) {
                                       } -> true
                                       parseExpression([{type:N},-,{type:N}], [n]) {
                                          allMatches([{type:N},-,{type:N}], [n]) {
                                          } -> []
                                       } -> false
                                       parseExpression([{type:N},{type:N}], [n]) {
                                          allMatches([{type:N},{type:N}], [n]) {
                                          } -> []
                                       } -> false
                                       parseExpression([-,{type:N}], [n]) {
                                          allMatches([-,{type:N}], [n]) {
                                          } -> []
                                       } -> false
                                       parseExpression([n], [n]) {
                                          allMatches([n], [n]) {
                                             allMatches([], []) {
                                             } -> [[]]
                                          } -> [[1]]
                                       } -> true
                                    } -> true
                                    parseType(N, [n]) {
                                       matchToType(N, [n]) {
                                       } -> true
                                       parseExpression([{type:N},-,{type:N}], [n]) {
                                          allMatches([{type:N},-,{type:N}], [n]) {
                                          } -> []
                                       } -> false
                                       parseExpression([{type:N},{type:N}], [n]) {
                                          allMatches([{type:N},{type:N}], [n]) {
                                          } -> []
                                       } -> false
                                       parseExpression([-,{type:N}], [n]) {
                                          allMatches([-,{type:N}], [n]) {
                                          } -> []
                                       } -> false
                                       parseExpression([n], [n]) {
                                          allMatches([n], [n]) {
                                             allMatches([], []) {
                                             } -> [[]]
                                          } -> [[1]]
                                       } -> true
                                    } -> true
                                 } -> true
                              } -> true
                              parseType(N, [n]) {
                                 matchToType(N, [n]) {
                                 } -> true
                                 parseExpression([{type:N},-,{type:N}], [n]) {
                                    allMatches([{type:N},-,{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([{type:N},{type:N}], [n]) {
                                    allMatches([{type:N},{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([-,{type:N}], [n]) {
                                    allMatches([-,{type:N}], [n]) {
                                    } -> []
                                 } -> false
                                 parseExpression([n], [n]) {
                                    allMatches([n], [n]) {
                                       allMatches([], []) {
                                       } -> [[]]
                                    } -> [[1]]
                                 } -> true
                              } -> true
                           } -> true
                        } -> true
                     } -> true
                  } -> true
               } -> true
            } -> true
         } -> true
      } -> true
   } -> true
} -> true
